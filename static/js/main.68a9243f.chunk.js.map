{"version":3,"sources":["contexts/UserDeckContext.js","components/SingleCard.js","contexts/QueryResultContext.js","components/Displayer.js","components/InputField.js","components/InputArea.js","components/UserDeck.js","App.js","index.js"],"names":["UserDeckContext","createContext","UserDeckContextProvider","props","useState","userDeck","setUserDeck","Provider","value","addCard","cardObject","currentCardName","name","filter","existingCard","length","alert","id","imageSrc","cmc","colors","text","removeCard","notYetDeleted","forEach","singleCard","splice","indexOf","console","log","userSizeToggle","idName","curr","document","getElementById","classList","toggle","children","SingleCard","useContext","className","key","Math","random","alt","setName","src","onClick","QueryResultContext","QueryResultContextProvider","queryResult","setQueryResult","fetcherHandler","color","subtype","format","type","fetch","then","res","json","soned","cards","map","oggetto","sonedArray","object","imageUrl","arr","catch","error","Displayer","mappedObjs","oggetti","message","InputField","htmlOptions","options","eachOption","htmlFor","placeholder","InputArea","func","UserDeck","deckList","card","App","AbortController","abort","objects","contractFunction","deckArea","ReactDOM","render"],"mappings":"ySAEaA,EAAkBC,0BAoDhBC,EAlDiB,SAAEC,GAAY,IAAD,EACPC,mBAAS,IADF,mBACjCC,EADiC,KACvBC,EADuB,KA0CzC,OACI,kBAACN,EAAgBO,SAAjB,CAA0BC,MAAU,CAACH,WAAUI,QAtCnC,SAACC,GACb,IAAIC,EAAkBD,EAAWE,KACRP,EAASQ,QAAO,SAAAC,GACrC,OAAOA,EAAaF,OAASD,KAGZI,OAAQ,EACzBC,MAAM,wDAGVV,EAAY,GAAD,mBAAKD,GAAL,CAAe,CAAC,GAAMK,EAAWO,GAChB,KAAQP,EAAWE,KACnB,MAASF,EAAWQ,SACpB,IAAOR,EAAWS,IAClB,OAAUT,EAAWU,OACrB,KAAQV,EAAWW,UAuBSC,WApBzC,SAACX,GAChB,IAAIY,GAAgB,EAEpBlB,EAASmB,SAAQ,SAAAC,GACVF,GAAiBE,EAAWb,OAAOD,IAClCN,EAASqB,OAAOrB,EAASsB,QAAQF,GAAa,GAC9CnB,EAAY,YAAID,IAChBkB,GAAgB,EAChBK,QAAQC,IAAIN,QAYgDO,eAPjD,SAACC,GACpB,IAAIC,EAAOC,SAASC,eAAeH,GACnCC,EAAKG,UAAUC,OAAO,mBACtBJ,EAAKG,UAAUC,OAAO,oBAKhBjC,EAAMkC,WCxBLC,EApBI,SAAAnC,GAAU,IAEjBM,EAAY8B,qBAAWvC,GAAvBS,QAER,OACI,yBAAK+B,UAAY,eACb,wBAAIC,IAAQC,KAAKC,UAAaxC,EAAMS,MACxC,yBAAKgC,IAAG,UAAQzC,EAAMS,KAAd,aAAwBT,EAAM0C,SAAaC,IAAQ3C,EAAMe,WACjE,4BAAQsB,UAAU,kBAAkBO,QAAW,kBAAMtC,EAAQ,CAAC,GAAMN,EAAMc,GAC1C,KAAQd,EAAMS,KACd,MAAST,EAAMe,SACf,IAAOf,EAAMgB,IACb,OAAUhB,EAAMiB,OAChB,KAAQjB,EAAMkB,SAL9C,iBCVK2B,EAAqB/C,0BA6DnBgD,EA3DoB,SAAC9C,GAAU,IAAD,EAEDC,mBAAS,CAC7C,QAAW,GACX,QAAW,KAJ0B,mBAEjC8C,EAFiC,KAEpBC,EAFoB,KAoDzC,OACI,kBAACH,EAAmBzC,SAApB,CAA6BC,MAAO,CAAC0C,cAAaC,iBAAgBC,eA9C7C,WAErBD,EAAe,CACb,QAAW,GACX,QAAW,eAGb,IAAIvC,EAAO,GACPyC,EAAQ,GACRlC,EAAM,GACNmC,EAAU,GACVC,EAAS,GACTC,EAAO,GAEyC,KAAhDvB,SAASC,eAAe,cAAc1B,QAAgBI,EAAI,gBAAYqB,SAASC,eAAe,cAAc1B,QACjE,KAA3CyB,SAASC,eAAe,SAAS1B,QAAgB6C,EAAK,kBAAcpB,SAASC,eAAe,SAAS1B,QAC5D,KAAzCyB,SAASC,eAAe,OAAO1B,QAAgBW,EAAG,eAAWc,SAASC,eAAe,OAAO1B,QAC/C,KAA7CyB,SAASC,eAAe,WAAW1B,QAAgB8C,EAAO,oBAAgBrB,SAASC,eAAe,WAAW1B,QAC5D,KAAjDyB,SAASC,eAAe,eAAe1B,QAAgB+C,EAAM,sBAAkBtB,SAASC,eAAe,eAAe1B,QAC3E,KAA3CyB,SAASC,eAAe,SAAS1B,QAAgBgD,EAAI,iBAAavB,SAASC,eAAe,SAAS1B,QAEvGiD,MAAM,6CAAD,OAA8C7C,GAA9C,OAAqDyC,GAArD,OAA6DlC,GAA7D,OAAmEmC,GAAnE,OAA6EC,GAA7E,OAAsFC,IACxFE,MAAK,SAAAC,GAA2B,OAAlBA,EAAMA,EAAIC,UACxBF,MAAK,SAAAG,GAEJ,OADiBA,EAAMC,MAAMC,KAAI,SAAAC,GAAO,OAAIA,QAG7CN,MAAK,SAAAO,GAEJ,OADgBA,EAAWpD,QAAO,SAAAqD,GAAM,OAAIA,EAAOC,eAGpDT,MAAK,SAAAU,GACJjB,EAAe,CACb,QAAWiB,EACX,QAAU,gBAAV,OAA2BA,EAAIrD,UAEjCa,QAAQC,IAAIqB,MAEbmB,OAAM,SAAAC,GAAW1C,QAAQC,IAAR,uBAA4ByC,UAS3CnE,EAAMkC,WC3BJkC,EAzBG,SAAApE,GAAU,IAEjB+C,EAAeX,qBAAWS,GAA1BE,YAEHsB,EAAarE,EAAMsE,QAAQV,KAAI,SAAAC,GAC/B,GAAIA,EAAQG,SACR,OACI,kBAAC,EAAD,CAAY1B,IAAKuB,EAAQ/C,GAAIA,GAAI+C,EAAQ/C,GAAIL,KAAMoD,EAAQpD,KAAMiC,QAASmB,EAAQnB,QAAS3B,SAAU8C,EAAQG,SAAUhD,IAAK6C,EAAQ7C,IAAKC,OAAQ4C,EAAQ5C,OAAQC,KAAM2C,EAAQ3C,UAQ3L,OACI,6BAASJ,GAAG,qBACR,wBAAIA,GAAG,sBAAsBiC,EAAYwB,SACzC,yBAAKzD,GAAG,wBACHuD,KCUFG,EAjCI,SAAAxE,GACf,OAAQA,EAAMqD,MACV,IAAK,SACD,IAAMoB,EAAazE,EAAM0E,QAAQd,KAAI,SAAAe,GACjC,MAAmB,QAAfA,EAA8B,4BAAQrC,IAAKqC,EAAW,IAAKtE,MAAM,IAAnC,OACrB,4BAAQiC,IAAKqC,EAAW,IAAKtE,MAAOsE,GAAaA,MAGlE,OACI,yBAAKtC,UAAU,eACX,2BAAOuC,QAAS5E,EAAMc,IAAKd,EAAMS,KAAjC,KACA,4BAAQK,GAAId,EAAMc,GAAIuB,UAAU,WAAW5B,KAAMT,EAAMS,MAClDgE,IAIjB,IAAK,SAOL,QACA,OACI,yBAAKpC,UAAU,eACf,2BAAOuC,QAAS5E,EAAMc,IAAKd,EAAMS,KAAjC,KACA,2BAAO4C,KAAMrD,EAAMqD,KAAMvC,GAAId,EAAMc,GAAI+D,YAAa7E,EAAM6E,iBCXvDC,G,MAdG,SAAA9E,GACd,OACI,6BAASc,GAAG,aACR,kBAAC,EAAD,CAAaA,GAAG,aAAaL,KAAK,OAAO4C,KAAK,OAAOwB,YAAY,SACjE,kBAAC,EAAD,CAAa/D,GAAG,QAAQL,KAAK,QAAQ4C,KAAK,SAASqB,QAAS,CAAC,MAAO,QAAS,OAAQ,QAAS,MAAO,WACrG,kBAAC,EAAD,CAAa5D,GAAG,MAAML,KAAK,MAAM4C,KAAK,SAASqB,QAAU,CAAC,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,QAC1H,kBAAC,EAAD,CAAa5D,GAAG,QAAQL,KAAK,OAAO4C,KAAK,SAASqB,QAAS,CAAC,MAAO,WAAY,UAAW,UAAW,cAAe,WAAY,kBAChI,kBAAC,EAAD,CAAa5D,GAAG,UAAUL,KAAK,UAAU4C,KAAK,OAAOwB,YAAY,YACjE,kBAAC,EAAD,CAAa/D,GAAG,cAAcL,KAAK,cAAc4C,KAAK,SAASqB,QAAS,CAAC,MAAO,WAAY,UAAW,YAAa,WAAY,YAChI,4BAAQ9B,QAAS5C,EAAM+E,KAAM1B,KAAK,SAASvC,GAAG,aAA9C,aCaGkE,G,MAtBE,SAAChF,GAAU,IAAD,EAEyBoC,qBAAWvC,GAAnDK,EAFe,EAEfA,SAAUiB,EAFK,EAELA,WAAYQ,EAFP,EAEOA,eAKxBsD,EAAW/E,EAAS0D,KACtB,SAAAsB,GAAI,OAAI,wBAAI5C,IAAK4C,EAAKpE,GAAKyB,KAAKC,UAAW0C,EAAKzE,KAAK,4BAAQ4B,UAAU,qBAAqBO,QAAS,kBAAMzB,EAAW+D,EAAKzE,QAAtE,cAGzD,OACI,6BAASK,GAAG,sBAAsBuB,UAAW,mBACzC,wBAAIO,QAAS,kBAAMjB,EAAe,yBAAlC,kBAIA,yBAAKb,GAAG,aAAamE,MC+DlBE,G,MAxEH,WAAO,IAAD,EAGsB/C,qBAAWS,GAA1CE,EAHS,EAGTA,YAAaC,EAHJ,EAGIA,eAoDpB,OACE,yBAAKlC,GAAG,aACN,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAWiE,KApDM,YAEJ,IAAIK,iBACVC,QAEXrC,EAAe,CACb,QAAW,GACX,QAAW,kBAGb,IAAIvC,EAAO,GACPyC,EAAQ,GACRlC,EAAM,GACNmC,EAAU,GACVC,EAAS,GACTC,EAAO,GAEyC,KAAhDvB,SAASC,eAAe,cAAc1B,QAAgBI,EAAI,gBAAYqB,SAASC,eAAe,cAAc1B,QACjE,KAA3CyB,SAASC,eAAe,SAAS1B,QAAgB6C,EAAK,kBAAcpB,SAASC,eAAe,SAAS1B,QAC5D,KAAzCyB,SAASC,eAAe,OAAO1B,QAAgBW,EAAG,eAAWc,SAASC,eAAe,OAAO1B,QAC/C,KAA7CyB,SAASC,eAAe,WAAW1B,QAAgB8C,EAAO,oBAAgBrB,SAASC,eAAe,WAAW1B,QAC5D,KAAjDyB,SAASC,eAAe,eAAe1B,QAAgB+C,EAAM,sBAAkBtB,SAASC,eAAe,eAAe1B,QAC3E,KAA3CyB,SAASC,eAAe,SAAS1B,QAAgBgD,EAAI,iBAAavB,SAASC,eAAe,SAAS1B,QAEvGiD,MAAM,6CAAD,OAA8C7C,GAA9C,OAAqDyC,GAArD,OAA6DlC,GAA7D,OAAmEmC,GAAnE,OAA6EC,GAA7E,OAAsFC,IACxFE,MAAK,SAAAC,GAA2B,OAAlBA,EAAMA,EAAIC,UACxBF,MAAK,SAAAG,GAEJ,OADiBA,EAAMC,MAAMC,KAAI,SAAAC,GAAO,OAAIA,QAG7CN,MAAK,SAAAO,GAEJ,OADgBA,EAAWpD,QAAO,SAAAqD,GAAM,OAAIA,EAAOC,eAGpDT,MAAK,SAAAU,GACJjB,EAAe,CACb,QAAWiB,EACX,QAAU,mBAAV,OAA8BA,EAAIrD,aAGrCsD,OAAM,SAAAC,GAAW1C,QAAQC,IAAR,uBAA4ByC,UAa1C,yBAAKrD,GAAG,gBACN,sEACA,kBAAC,EAAD,CAAWwD,QAASvB,EAAYuC,WAEpC,kBAAC,EAAD,CAAUC,iBAdO,WACrB,IAAIC,EAAW1D,SAASC,eAAe,uBACvCyD,EAASxD,UAAUC,OAAO,sBAC1BuD,EAASxD,UAAUC,OAAO,+BCvD1BwD,IAASC,OACH,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEF5D,SAASC,eAAe,W","file":"static/js/main.68a9243f.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const UserDeckContext = createContext();\r\n\r\nconst UserDeckContextProvider = ( props ) => {\r\n    const [ userDeck, setUserDeck ] = useState([]);\r\n\r\n    \r\n\r\n    const addCard = (cardObject) => {\r\n        let currentCardName = cardObject.name;\r\n        const sameExistingCard = userDeck.filter(existingCard => {\r\n            return existingCard.name === currentCardName\r\n        });\r\n\r\n        if (sameExistingCard.length >3) {\r\n            alert(\"You can't add more than four copies of the same card\");\r\n            return;\r\n        };\r\n        setUserDeck([...userDeck, {\"id\": cardObject.id ,\r\n                                    \"name\": cardObject.name,\r\n                                    \"image\": cardObject.imageSrc,\r\n                                    \"cmc\": cardObject.cmc,\r\n                                    \"colors\": cardObject.colors,\r\n                                    \"text\": cardObject.text}]);\r\n    };\r\n\r\n    const removeCard = (currentCardName) => {\r\n        let notYetDeleted = true;\r\n        // setUserDeck(userDeck.filter(singleCard => singleCard.name!==currentCardName));\r\n        userDeck.forEach(singleCard => {\r\n            if(notYetDeleted && singleCard.name===currentCardName) {\r\n                userDeck.splice(userDeck.indexOf(singleCard), 1);\r\n                setUserDeck([...userDeck]);\r\n                notYetDeleted = false;\r\n                console.log(notYetDeleted);\r\n            }\r\n        });\r\n    };\r\n\r\n    const userSizeToggle = (idName) => {\r\n        let curr = document.getElementById(idName);\r\n        curr.classList.toggle(\"user-compressed\");\r\n        curr.classList.toggle(\"user-expanded\");\r\n    }\r\n\r\n    return (\r\n        <UserDeckContext.Provider value = { {userDeck, addCard, removeCard, userSizeToggle} }>\r\n            { props.children }\r\n        </UserDeckContext.Provider>\r\n    )\r\n    ;\r\n};\r\n\r\nexport default UserDeckContextProvider;","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { UserDeckContext } from \"../contexts/UserDeckContext\";\r\n\r\nconst SingleCard = props => {\r\n\r\n    const { addCard } = useContext(UserDeckContext);\r\n\r\n    return (\r\n        <div className = 'single-card'>\r\n            <h3 key = { Math.random() }>{ props.name }</h3>\r\n        <img alt = { `${props.name}, ${ props.setName }` } src = { props.imageSrc }/>\r\n        <button className=\"add-card-button\" onClick = {() => addCard({\"id\": props.id ,\r\n                                        \"name\": props.name,\r\n                                        \"image\": props.imageSrc,\r\n                                        \"cmc\": props.cmc,\r\n                                        \"colors\": props.colors,\r\n                                        \"text\": props.text})\r\n                                    }>Add to deck</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SingleCard;","import React, { createContext, useState } from 'react';\r\n\r\nexport const QueryResultContext = createContext();\r\n\r\nconst QueryResultContextProvider = (props)=> {\r\n    \r\n    const [ queryResult, setQueryResult ] = useState({\r\n        \"objects\": [],\r\n        \"message\": \"\",\r\n      })\r\n    \r\n      const fetcherHandler = () => {\r\n\r\n        setQueryResult({\r\n          \"objects\": [],\r\n          'message': 'Loading...'\r\n        });\r\n    \r\n        let name = \"\";\r\n        let color = \"\";\r\n        let cmc = \"\";\r\n        let subtype = \"\";\r\n        let format = \"\";\r\n        let type = \"\";\r\n    \r\n        if (document.getElementById(\"name-field\").value !== \"\") { name = `&name=${document.getElementById(\"name-field\").value}` };\r\n        if (document.getElementById(\"color\").value !== \"\") { color = `&colors=${document.getElementById(\"color\").value}` };\r\n        if (document.getElementById(\"cmc\").value !== \"\") { cmc = `&cmc=${document.getElementById(\"cmc\").value}` };\r\n        if (document.getElementById(\"subtype\").value !== \"\") { subtype = `&subtypes=${document.getElementById(\"subtype\").value}` };\r\n        if (document.getElementById(\"game-format\").value !== \"\") { format = `&gameFormat=${document.getElementById(\"game-format\").value}` };\r\n        if (document.getElementById(\"types\").value !== \"\") { type = `&types=${document.getElementById(\"types\").value}` };\r\n    \r\n        fetch(`https://api.magicthegathering.io/v1/cards?${name}${color}${cmc}${subtype}${format}${type}`)\r\n          .then(res => { res = res.json(); return res })\r\n          .then(soned => {\r\n            let sonedArray = soned.cards.map(oggetto => oggetto);\r\n            return sonedArray;\r\n          })\r\n          .then(sonedArray => {\r\n            let withImage = sonedArray.filter(object => object.imageUrl);\r\n            return withImage\r\n          })\r\n          .then(arr => {\r\n            setQueryResult({\r\n              \"objects\": arr,\r\n              'message': `Cards found: ${arr.length}`\r\n            });\r\n            console.log(queryResult)\r\n          })\r\n          .catch(error => { console.log(`not working: ${error}`) });\r\n      }\r\n    \r\n    \r\n    \r\n\r\n\r\n    return (\r\n        <QueryResultContext.Provider value={{queryResult, setQueryResult, fetcherHandler}}>\r\n            {props.children}\r\n        </QueryResultContext.Provider>\r\n    )\r\n}\r\n\r\nexport default QueryResultContextProvider;","import React, {useContext} from \"react\";\r\nimport \"../styles/Displayer.scss\";\r\nimport SingleCard from './SingleCard';\r\nimport {QueryResultContext} from '../contexts/QueryResultContext';\r\n\r\n\r\nconst Displayer = props => {\r\n\r\n    const {queryResult} = useContext(QueryResultContext);\r\n\r\n    let mappedObjs = props.oggetti.map(oggetto => {\r\n        if (oggetto.imageUrl) {\r\n            return (\r\n                <SingleCard key={oggetto.id} id={oggetto.id} name={oggetto.name} setName={oggetto.setName} imageSrc={oggetto.imageUrl} cmc={oggetto.cmc} colors={oggetto.colors} text={oggetto.text}/>\r\n                // <div className=\"single-card\" key={oggetto.id}>\r\n            // <h3 key={Math.random()}>{oggetto.name}</h3>\r\n            // <img alt={`${oggetto.name}, ${oggetto.setName}`} src={oggetto.imageUrl} /> */}\r\n            // </div>\r\n        )    \r\n    }\r\n    })\r\n    return (\r\n        <section id=\"display-container\">\r\n            <h2 id=\"display-zone-title\">{queryResult.message}</h2>\r\n            <div id=\"display-zone-content\">\r\n                {mappedObjs}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Displayer;","import React from \"react\";\r\n\r\nconst InputField = props => {\r\n    switch (props.type) {\r\n        case \"select\":\r\n            const htmlOptions= props.options.map(eachOption => {\r\n                if (eachOption === \"Any\") {return <option key={eachOption+\"k\"} value=\"\">Any</option>}\r\n                else {return <option key={eachOption+\"k\"} value={eachOption}>{eachOption}</option>}\r\n                }\r\n            );             \r\n            return (\r\n                <div className=\"input-field\">\r\n                    <label htmlFor={props.id}>{props.name}:</label>\r\n                    <select id={props.id} className=\"selector\" name={props.name}>\r\n                        {htmlOptions}\r\n                    </select> \r\n                </div>\r\n            );\r\n        case \"number\": \r\n            return (\r\n                <div className=\"input-field\">\r\n                <label htmlFor={props.id}>{props.name}:</label>\r\n                <input type={props.type} id={props.id} placeholder={props.placeholder}></input>\r\n                </div>\r\n            );\r\n        default: \r\n        return (\r\n            <div className=\"input-field\">\r\n            <label htmlFor={props.id}>{props.name}:</label>\r\n            <input type={props.type} id={props.id} placeholder={props.placeholder}></input>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default InputField;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport '../styles/inputArea.scss'\r\n\r\nconst InputArea = props => {\r\n    return (\r\n        <section id='inputArea'>\r\n            <InputField  id=\"name-field\" name=\"Name\" type=\"text\" placeholder=\"Name\"/>\r\n            <InputField  id=\"color\" name=\"Color\" type=\"select\" options={[\"Any\", \"white\", \"blue\", \"black\", \"red\", \"green\"]}/>\r\n            <InputField  id=\"cmc\" name=\"Cmc\" type=\"select\" options= {[\"Any\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"]}/>\r\n            <InputField  id=\"types\" name=\"Type\" type=\"select\" options={[\"Any\", \"Creature\", \"Instant\", \"Sorcery\", \"Enchantment\", \"Artifact\", \"Planeswalker\"]}/>\r\n            <InputField  id=\"subtype\" name=\"Subtype\" type=\"text\" placeholder=\"subtype\"/>\r\n            <InputField  id=\"game-format\" name=\"Game Format\" type=\"select\" options={[\"Any\", \"Standard\", \"Pioneer\", \"Commander\", \"Historic\", \"Legacy\"]}/>\r\n            <button onClick={props.func} type=\"button\" id=\"submitter\">Search</button>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default InputArea;","import React, {useContext} from 'react';\r\nimport { UserDeckContext } from '../contexts/UserDeckContext';\r\nimport '../styles/UserDeck.scss';\r\n\r\nconst UserDeck = (props)=> {\r\n\r\n    const  {userDeck, removeCard, userSizeToggle} = useContext(UserDeckContext);\r\n\r\n\r\n\r\n\r\n    const deckList = userDeck.map(\r\n        card => <h6 key={card.id + Math.random()}>{card.name}<button className=\"remove-card-button\" onClick={() => removeCard(card.name)}>remove</button></h6>\r\n    )\r\n\r\n    return (\r\n        <section id=\"user-deck-container\" className= \"user-compressed\">\r\n            <h2 onClick={() => userSizeToggle(\"user-deck-container\")}>\r\n                {/* <img src=\"../public/UserDeck.svg\" alt=\"User Deck Logo\" width=\"100\" height=\"100\"></img> */}\r\n                User Deck List\r\n            </h2>\r\n            <div id=\"deck-list\">{deckList}</div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default UserDeck;","import React, { useContext } from \"react\";\r\nimport Displayer from \"./components/Displayer\";\r\nimport InputArea from \"./components/InputArea\";\r\nimport UserDeck from './components/UserDeck';\r\nimport { QueryResultContext } from \"./contexts/QueryResultContext\";\r\nimport UserDeckContextProvider from \"./contexts/UserDeckContext\";\r\nimport './styles/App.scss';\r\n\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n  \r\n  \r\n  const {queryResult, setQueryResult} = useContext(QueryResultContext);\r\n\r\n\r\n  const fetcherHandler = () => {\r\n\r\n    let controller = new AbortController();\r\n    controller.abort();\r\n\r\n    setQueryResult({\r\n      \"objects\": [],\r\n      'message': ' - Loading...'\r\n    });\r\n\r\n    let name = \"\";\r\n    let color = \"\";\r\n    let cmc = \"\";\r\n    let subtype = \"\";\r\n    let format = \"\";\r\n    let type = \"\";\r\n\r\n    if (document.getElementById(\"name-field\").value !== \"\") { name = `&name=${document.getElementById(\"name-field\").value}` };\r\n    if (document.getElementById(\"color\").value !== \"\") { color = `&colors=${document.getElementById(\"color\").value}` };\r\n    if (document.getElementById(\"cmc\").value !== \"\") { cmc = `&cmc=${document.getElementById(\"cmc\").value}` };\r\n    if (document.getElementById(\"subtype\").value !== \"\") { subtype = `&subtypes=${document.getElementById(\"subtype\").value}` };\r\n    if (document.getElementById(\"game-format\").value !== \"\") { format = `&gameFormat=${document.getElementById(\"game-format\").value}` };\r\n    if (document.getElementById(\"types\").value !== \"\") { type = `&types=${document.getElementById(\"types\").value}` };\r\n\r\n    fetch(`https://api.magicthegathering.io/v1/cards?${name}${color}${cmc}${subtype}${format}${type}`)\r\n      .then(res => { res = res.json(); return res })\r\n      .then(soned => {\r\n        let sonedArray = soned.cards.map(oggetto => oggetto);\r\n        return sonedArray;\r\n      })\r\n      .then(sonedArray => {\r\n        let withImage = sonedArray.filter(object => object.imageUrl);\r\n        return withImage\r\n      })\r\n      .then(arr => {\r\n        setQueryResult({\r\n          \"objects\": arr,\r\n          'message': ` - Cards found: ${arr.length}`\r\n        });\r\n      })\r\n      .catch(error => { console.log(`not working: ${error}`) });\r\n  }\r\n\r\n  const toggleUserDeck = ()=> {\r\n    let deckArea = document.getElementById('user-deck-container');\r\n    deckArea.classList.toggle('user-deck-expanded');\r\n    deckArea.classList.toggle('user-deck-contracted')\r\n  }\r\n\r\n  return (\r\n    <div id=\"main-body\">\r\n      <UserDeckContextProvider>\r\n        <InputArea func={fetcherHandler}/>\r\n          <div id=\"results-body\">\r\n            <h1>Magic The Gathering database Navigator</h1>\r\n            <Displayer oggetti={queryResult.objects} />\r\n          </div>\r\n        <UserDeck contractFunction={toggleUserDeck}/>\r\n      </UserDeckContextProvider>\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.scss';\r\nimport App from './App';\r\nimport QueryResultContextProvider from './contexts/QueryResultContext';\r\n \r\n\r\n\r\n\r\n    ReactDOM.render(\r\n          <QueryResultContextProvider>\r\n            <App />\r\n          </QueryResultContextProvider>,\r\n          document.getElementById('root')\r\n          );"],"sourceRoot":""}