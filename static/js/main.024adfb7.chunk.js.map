{"version":3,"sources":["InputField.js","Displayer.js","App.js","index.js"],"names":["InputField","props","type","htmlOptions","options","map","eachOption","key","value","className","htmlFor","id","name","placeholder","Displayer","mappedObjs","oggetti","oggetto","imageUrl","Math","random","alt","setName","src","App","state","fetcherHandler","color","cmc","subtype","format","document","getElementById","fetch","then","res","json","soned","cards","arr","setState","objects","console","log","catch","error","withImage","this","filter","object","onClick","length","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.024adfb7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst InputField = props => {\r\n    switch (props.type) {\r\n        case \"select\":\r\n            const htmlOptions= props.options.map(eachOption => {\r\n                if (eachOption === \"Any\") {return <option key={eachOption+\"k\"} value=\"\">Any</option>}\r\n                else {return <option key={eachOption+\"k\"} value={eachOption}>{eachOption}</option>}\r\n                }\r\n            );             \r\n            return (\r\n                <div className=\"input-field\">\r\n                    <label htmlFor={props.id}>{props.name}:</label>\r\n                    <select id={props.id} className=\"selector\" name={props.name}>\r\n                        {htmlOptions}\r\n                    </select> \r\n                </div>\r\n            );\r\n        case \"number\": \r\n            return (\r\n                <div className=\"input-field\">\r\n                <label htmlFor={props.id}>{props.name}:</label>\r\n                <input type={props.type} id={props.id} placeholder={props.placeholder}></input>\r\n                </div>\r\n            );\r\n        default: \r\n        return (\r\n            <div className=\"input-field\">\r\n            <label htmlFor={props.id}>{props.name}:</label>\r\n            <input type={props.type} id={props.id} placeholder={props.placeholder}></input>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default InputField;","import React from \"react\";\r\nimport \"./styles/Displayer.scss\";\r\n\r\nconst Displayer = props => {\r\n    let mappedObjs = props.oggetti.map(oggetto => {\r\n        if (oggetto.imageUrl) {\r\n            return (\r\n                <div className=\"single-card\">\r\n        <h3 key={Math.random()}>{oggetto.name}</h3>\r\n        <img alt={`${oggetto.name}, ${oggetto.setName}`} src={oggetto.imageUrl} />\r\n        </div>\r\n        )    \r\n    }\r\n    })\r\n    return (\r\n        <div id=\"display-container\">{mappedObjs}</div>\r\n    )\r\n}\r\n\r\nexport default Displayer;","import React from \"react\";\r\nimport InputField from './InputField';\r\nimport Displayer from \"./Displayer\";\r\n\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n  state = {\r\n    \"objects\": [],\r\n    \"message\": \"\"\r\n  };\r\n\r\n  \r\nfetcherHandler = () => {\r\n  \r\n  let name = \"\";\r\n  let color = \"\";\r\n  let cmc = \"\";\r\n  let subtype = \"\";\r\n  let format = \"\";\r\n  let type = \"\";\r\n  \r\n  if (document.getElementById(\"name-field\").value !== \"\") {name = `&name=${document.getElementById(\"name-field\").value}`};\r\n  if (document.getElementById(\"color\").value !== \"\") {color = `&colors=${document.getElementById(\"color\").value}`};\r\n  if (document.getElementById(\"cmc\").value !== \"\") {cmc = `&cmc=${document.getElementById(\"cmc\").value}`};\r\n  if (document.getElementById(\"subtype\").value !== \"\") {subtype = `&subtypes=${document.getElementById(\"subtype\").value}`};\r\n  if (document.getElementById(\"game-format\").value !== \"\") {format = `&gameFormat=${document.getElementById(\"game-format\").value}`};\r\n  if (document.getElementById(\"types\").value !== \"\") {type = `&types=${document.getElementById(\"types\").value}`};\r\n  \r\n      fetch(`https://api.magicthegathering.io/v1/cards?${name}${color}${cmc}${subtype}${format}${type}`)\r\n      .then(res => {res= res.json(); return res})\r\n      // .then(soned => {console.log(soned)})\r\n      .then(soned => {\r\n        let sonedArray = soned.cards.map(oggetto => oggetto);\r\n        return sonedArray;\r\n      })\r\n      .then(arr => {\r\n        this.setState({objects: arr});\r\n        console.log(this.state)\r\n      })\r\n      .catch(error => {console.log(`not working: ${error}`)});\r\n    }\r\n    \r\n    \r\n        \r\n    render() {\r\n    \r\n      let withImage = this.state.objects.filter(object => object.imageUrl);\r\n\r\n\r\n      return (\r\n        <div id=\"query-container\">\r\n          <h1>Magic The Gathering database Navigator</h1>\r\n          <InputField  id=\"name-field\" name=\"Name\" type=\"text\" placeholder=\"Name\"/>\r\n          <InputField  id=\"color\" name=\"Color\" type=\"select\" options={[\"Any\", \"white\", \"blue\", \"black\", \"red\", \"green\"]}/>\r\n          <InputField  id=\"cmc\" name=\"Cmc\" type=\"select\" options= {[\"Any\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"]}/>\r\n          <InputField  id=\"types\" name=\"Type\" type=\"select\" options={[\"Any\", \"Creature\", \"Instant\", \"Sorcery\", \"Enchantment\", \"Artifact\", \"Planeswalker\"]}/>\r\n          <InputField  id=\"subtype\" name=\"Subtype\" type=\"text\" placeholder=\"subtype\"/>\r\n          <InputField  id=\"game-format\" name=\"Game Format\" type=\"select\" options={[\"Any\", \"Standard\", \"Pioneer\", \"Commander\", \"Historic\", \"Legacy\"]}/>\r\n          <button onClick={this.fetcherHandler} type=\"button\" id=\"submitter\">Submit</button>\r\n          <section id=\"display-zone\">\r\n      <h2 id=\"display-zone\">Display Zone - objects found: {withImage.length}</h2>\r\n            <Displayer oggetti={this.state.objects}/>\r\n          </section>\r\n        </div>\r\n      );\r\n    };\r\n  \r\n  }\r\n    \r\n    \r\n  export default App;\r\n    \r\n    \r\n    \r\n   ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n \n\n\n\n    ReactDOM.render(\n          <div>\n            <App />\n          </div>,\n          document.getElementById('root')\n          );"],"sourceRoot":""}